"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/lib/courseService.ts":
/*!**********************************!*\
  !*** ./src/lib/courseService.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CourseService: function() { return /* binding */ CourseService; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"(app-pages-browser)/./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n\n\n\n\nconst COLLECTION_NAME = \"courses\";\n// Helper function to clean data before sending to Firestore\nconst cleanCourseData = (data)=>{\n    const cleaned = {};\n    for (const [key, value] of Object.entries(data)){\n        // Skip undefined values and functions\n        if (value !== undefined && typeof value !== \"function\") {\n            // Convert empty strings to empty string for optional fields (don't use null)\n            if (typeof value === \"string\" && value === \"\" && [\n                \"paymentLink\",\n                \"backgroundImage\",\n                \"certificateImage\"\n            ].includes(key)) {\n                cleaned[key] = \"\";\n            } else {\n                cleaned[key] = value;\n            }\n        }\n    }\n    return cleaned;\n};\nclass CourseService {\n    // Create a new course\n    static async createCourse(courseData) {\n        try {\n            const courseId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n            const courseWithMetadata = {\n                ...courseData,\n                _id: courseId,\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                status: courseData.status || \"draft\",\n                // Ensure these fields are numbers\n                rating: Number(courseData.rating) || 0,\n                totalRatings: Number(courseData.totalRatings) || 0,\n                enrolledStudents: Number(courseData.enrolledStudents) || 0,\n                price: Number(courseData.price) || 0,\n                originalPrice: Number(courseData.originalPrice) || 0,\n                // Ensure arrays are properly initialized\n                learningOutcomes: Array.isArray(courseData.learningOutcomes) ? courseData.learningOutcomes : [],\n                features: Array.isArray(courseData.features) ? courseData.features : [],\n                skills: Array.isArray(courseData.skills) ? courseData.skills : [],\n                requirements: Array.isArray(courseData.requirements) ? courseData.requirements : [],\n                module: Array.isArray(courseData.module) ? courseData.module : [],\n                highlights: Array.isArray(courseData.highlights) ? courseData.highlights : [],\n                project: Array.isArray(courseData.project) ? courseData.project : [],\n                programFor: Array.isArray(courseData.programFor) ? courseData.programFor : [],\n                // Ensure strings are not undefined\n                title: courseData.title || \"\",\n                slug: courseData.slug || \"\",\n                shortDescription: courseData.shortDescription || \"\",\n                category: courseData.category || \"\",\n                level: courseData.level || \"beginner\",\n                language: courseData.language || \"\",\n                duration: courseData.duration || \"\",\n                hours: courseData.hours || \"\",\n                programBy: courseData.programBy || \"Admin\",\n                lastUpdated: courseData.lastUpdated || new Date().toISOString(),\n                paymentLink: courseData.paymentLink || \"\",\n                backgroundImage: courseData.backgroundImage || \"\",\n                certificateImage: courseData.certificateImage || \"\",\n                // Ensure toolsData has proper structure\n                toolsData: courseData.toolsData || {\n                    sectionTitle: \"\",\n                    category: \"\",\n                    toolsCount: \"0\",\n                    displayImage: \"\",\n                    tools: []\n                }\n            };\n            // Clean the data before sending\n            const cleanedData = cleanCourseData(courseWithMetadata);\n            console.log(\"Creating course with cleaned data:\", cleanedData);\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, COLLECTION_NAME), cleanedData);\n            const createdCourse = {\n                ...cleanedData,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            return {\n                success: true,\n                data: createdCourse\n            };\n        } catch (error) {\n            console.error(\"Error creating course:\", error);\n            const errorMessage = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.handleFirestoreError)(error);\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    // Get all courses\n    static async getAllCourses() {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, COLLECTION_NAME), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const courses = [];\n            querySnapshot.forEach((doc)=>{\n                var _data_createdAt, _data_updatedAt;\n                const data = doc.data();\n                courses.push({\n                    ...data,\n                    createdAt: ((_data_createdAt = data.createdAt) === null || _data_createdAt === void 0 ? void 0 : _data_createdAt.toDate()) || new Date(),\n                    updatedAt: ((_data_updatedAt = data.updatedAt) === null || _data_updatedAt === void 0 ? void 0 : _data_updatedAt.toDate()) || new Date()\n                });\n            });\n            return {\n                success: true,\n                data: courses\n            };\n        } catch (error) {\n            console.error(\"Error fetching courses:\", error);\n            const errorMessage = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.handleFirestoreError)(error);\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    // Get course by ID\n    static async getCourseById(courseId) {\n        try {\n            var _data_createdAt, _data_updatedAt;\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, COLLECTION_NAME), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"_id\", \"==\", courseId));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (querySnapshot.empty) {\n                return {\n                    success: false,\n                    error: \"Course not found\"\n                };\n            }\n            const doc = querySnapshot.docs[0];\n            const data = doc.data();\n            const course = {\n                ...data,\n                createdAt: ((_data_createdAt = data.createdAt) === null || _data_createdAt === void 0 ? void 0 : _data_createdAt.toDate()) || new Date(),\n                updatedAt: ((_data_updatedAt = data.updatedAt) === null || _data_updatedAt === void 0 ? void 0 : _data_updatedAt.toDate()) || new Date()\n            };\n            return {\n                success: true,\n                data: course\n            };\n        } catch (error) {\n            console.error(\"Error fetching course:\", error);\n            const errorMessage = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.handleFirestoreError)(error);\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    // Update course\n    static async updateCourse(courseId, courseData) {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, COLLECTION_NAME), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"_id\", \"==\", courseId));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (querySnapshot.empty) {\n                return {\n                    success: false,\n                    error: \"Course not found\"\n                };\n            }\n            const docRef = querySnapshot.docs[0].ref;\n            const updateData = {\n                ...courseData,\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                // Ensure numeric fields are properly typed\n                ...courseData.rating !== undefined && {\n                    rating: Number(courseData.rating)\n                },\n                ...courseData.totalRatings !== undefined && {\n                    totalRatings: Number(courseData.totalRatings)\n                },\n                ...courseData.enrolledStudents !== undefined && {\n                    enrolledStudents: Number(courseData.enrolledStudents)\n                },\n                ...courseData.price !== undefined && {\n                    price: Number(courseData.price)\n                },\n                ...courseData.originalPrice !== undefined && {\n                    originalPrice: Number(courseData.originalPrice)\n                }\n            };\n            // Clean the data before sending\n            const cleanedData = cleanCourseData(updateData);\n            console.log(\"Updating course with cleaned data:\", cleanedData);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(docRef, cleanedData);\n            const updatedCourse = {\n                ...courseData,\n                _id: courseId,\n                updatedAt: new Date()\n            };\n            return {\n                success: true,\n                data: updatedCourse\n            };\n        } catch (error) {\n            console.error(\"Error updating course:\", error);\n            const errorMessage = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.handleFirestoreError)(error);\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    // Delete course\n    static async deleteCourse(courseId) {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, COLLECTION_NAME), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"_id\", \"==\", courseId));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (querySnapshot.empty) {\n                return {\n                    success: false,\n                    error: \"Course not found\"\n                };\n            }\n            const docRef = querySnapshot.docs[0].ref;\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(docRef);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting course:\", error);\n            const errorMessage = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.handleFirestoreError)(error);\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    // Upload image with better error handling\n    static async uploadImage(file, path) {\n        try {\n            // Validate file\n            if (!file) {\n                return {\n                    success: false,\n                    error: \"No file provided\"\n                };\n            }\n            if (file.size > 5 * 1024 * 1024) {\n                return {\n                    success: false,\n                    error: \"File size must be less than 5MB\"\n                };\n            }\n            const allowedTypes = [\n                \"image/jpeg\",\n                \"image/jpg\",\n                \"image/png\",\n                \"image/webp\"\n            ];\n            if (!allowedTypes.includes(file.type)) {\n                return {\n                    success: false,\n                    error: \"Only JPEG, PNG, and WebP images are allowed\"\n                };\n            }\n            const filename = \"\".concat(Date.now(), \"_\").concat(file.name.replace(/[^a-zA-Z0-9.-]/g, \"_\"));\n            const storageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"\".concat(path, \"/\").concat(filename));\n            console.log(\"Uploading image:\", filename);\n            const snapshot = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(storageRef, file);\n            const downloadURL = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(snapshot.ref);\n            return {\n                success: true,\n                url: downloadURL\n            };\n        } catch (error) {\n            console.error(\"Error uploading image:\", error);\n            return {\n                success: false,\n                error: error.message || \"Failed to upload image\"\n            };\n        }\n    }\n    // Delete image\n    static async deleteImage(imageUrl) {\n        try {\n            const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, imageUrl);\n            await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.deleteObject)(imageRef);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting image:\", error);\n            return {\n                success: false,\n                error: error.message || \"Failed to delete image\"\n            };\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/courseService.ts\n"));

/***/ })

});